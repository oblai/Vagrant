Vagrant.configure("2") do |config|

# ------- app01 -------
    config.vm.define "app01" do |app01|
        app01.vm.hostname = "app01"
        app01.vm.box = "ubuntu/focal64" # ubuntu 20.04
        app01.vm.network "public_network", bridge: "Intel(R) Wi-Fi 6 AX200 160MHz"
        app01.vm.network :forwarded_port, guest: 22, host: 2201, id: 'ssh'
        
        app01.vm.provider "virtualbox" do |vb|
            vb.name = "app01"
            vb.cpus = 2
            vb.memory = "2048"
        end
          
        app01.vm.provision "shell", inline: $script
    end

# ------- mail01 -------
    config.vm.define "mail01" do |mail01|
        mail01.vm.hostname = "mail01"
        mail01.vm.box = "ubuntu/focal64" # ubuntu 20.04
        mail01.vm.network "public_network", bridge: "Intel(R) Wi-Fi 6 AX200 160MHz"
        mail01.vm.network :forwarded_port, guest: 22, host: 2202, id: 'ssh'
        # Директории которые будут синхронизироваться между локальным компьютером и виртуалкой.
        # mail01.vm.synced_folder "D:/Work/sites/vagrant_test", "/var/www/vagrant_test"
        
        # mail01.disksize.size = "30GB"
        mail01.vm.provider "virtualbox" do |vb|
            vb.name = "mail01"
            vb.cpus = 2
            vb.memory = "2048"
        end
          
        mail01.vm.provision "shell", inline: $script
    end

# ------- db01 -------
    config.vm.define "db01" do |db01|
        db01.vm.hostname = "db01"
        db01.vm.box = "ubuntu/focal64" # ubuntu 20.04
        db01.vm.network "public_network", bridge: "Intel(R) Wi-Fi 6 AX200 160MHz"
        db01.vm.network :forwarded_port, guest: 22, host: 2203, id: 'ssh'
        # Директории которые будут синхронизироваться между локальным компьютером и виртуалкой.
        # db01.vm.synced_folder "D:/Work/sites/vagrant_test", "/var/www/vagrant_test"
        
        # db01.disksize.size = "30GB"
        db01.vm.provider "virtualbox" do |vb|
            vb.name = "db01"
            vb.cpus = 2
            vb.memory = "2048"
        end
          
        db01.vm.provision "shell", inline: $script
    end

end

# script
$script = <<-SCRIPT
    sudo apt upgrade -y
    sudo apt update -y
SCRIPT
